
PROCEDURE  dot_prouct( NUMBER: v1 , v2)

  VAR
     n : size   
    v1 : vector_one
    v2 : vector_two
    
  BIGIN
    
  product = 0
      // Loop for calculate dot product
     for (let i = 0; i < n; ) Do
      ps += v1[] *v2[] ;
      

  END

            //  2 SOLUTION
            function dotProduct(vector1, vector2){
                let result = 0;
                for(let i = 0; i < vector1.length; i++){
                    result += vector1[i] * vector2[i]
                  }
                // SINCE IS FUNCTION 
                return result
              }
                  // FOR LOOP 
              for(let i = 0; i < vectors.length; i++){
                  // Nested  For loop
                for(let j = i + 1; j < vectors.length; j++){
                  if(dotProduct(vectors[i], vectors[j]) === 0){
                      console.log(`${vectors[i]} and ${vectors[j]} are orthogonal `)
                  }
                }
              }


                  //3 SOLUTION

                  function dot_Product(v1, v2)

                  VAR
                  n : size   
                 v1 : vector_one
                 v2 : vector_two
                
                 BEGIN
                
                 ps = 0
                      // Loop for calculate dot product 
                      for (let i = 0; i < n; i++)

                          ps= ps[] + v1[] * v2[];
                      return product;  























                      